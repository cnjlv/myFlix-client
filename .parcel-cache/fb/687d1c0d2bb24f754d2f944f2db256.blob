var helpers = require("../../../../../../AppData/Roaming/nvm/v14.16.1/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ProfileUpdate", ()=>ProfileUpdate
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _form = require("react-bootstrap/Form");
var _formDefault = parcelHelpers.interopDefault(_form);
var _button = require("react-bootstrap/Button");
var _buttonDefault = parcelHelpers.interopDefault(_button);
var _reactRouterDom = require("react-router-dom");
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _s = $RefreshSig$();
function ProfileUpdate(props) {
    _s();
    const [username, setUsername] = _react.useState("");
    const [password, setPassword] = _react.useState("");
    const [email, setEmail] = _react.useState("");
    const [birthday, setBirthday] = _react.useState("");
    const [usernameError, setUsernameError] = _react.useState({
    });
    const [passwordError, setPasswordError] = _react.useState({
    });
    const [emailError, setEmailError] = _react.useState({
    });
    const onBackClick = props.onBackClick;
    const handleUpdate = (e)=>{
        e.preventDefault();
        const isValid = formValidation();
        const url = "https://cnjlv.herokuapp.com/users/" + localStorage.getItem("user");
        if (isValid) _axiosDefault.default.put(url, {
            Username: username,
            Password: password,
            Email: email,
            Birthday: birthday
        }, {
            headers: {
                Authorization: "Bearer " + localStorage.getItem("token")
            }
        }).then((response)=>{
            const data = response.data;
            localStorage.setItem("user", data.Username);
            localStorage.setItem('email', data.Email);
            localStorage.setItem('birthday', data.Birthday);
            alert("Profile updated successfully");
            window.open("/", "_self");
        }).catch((e1)=>{
            console.log(e1);
        });
    };
    const formValidation = ()=>{
        const usernameError1 = {
        };
        const passwordError1 = {
        };
        const emailError1 = {
        };
        let isValid = true;
        if (username.trim().length < 5) {
            usernameError1.usernameShort = "Minimum 5 characters";
            isValid = false;
        }
        if (password.trim().length < 1) {
            passwordError1.passwordMissing = "Password is required";
            isValid = false;
        }
        if (!email.includes(".") && !email.includes("@")) {
            emailError1.emailNotEmail = "Email doesn't seem valid";
            isValid = false;
        }
        setUsernameError(usernameError1);
        setPasswordError(passwordError1);
        setEmailError(emailError1);
        return isValid;
    };
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        __source: {
            fileName: "C:\\Users\\camel\\Documents\\GitHub\\myFlix-client\\src\\components\\profile-update\\profile-update.jsx",
            lineNumber: 85
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement("h1", {
        __source: {
            fileName: "C:\\Users\\camel\\Documents\\GitHub\\myFlix-client\\src\\components\\profile-update\\profile-update.jsx",
            lineNumber: 86
        },
        __self: this
    }, "Update profile"), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default, {
        className: "registration-form",
        __source: {
            fileName: "C:\\Users\\camel\\Documents\\GitHub\\myFlix-client\\src\\components\\profile-update\\profile-update.jsx",
            lineNumber: 87
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Group, {
        controlId: "formBasicUsername",
        __source: {
            fileName: "C:\\Users\\camel\\Documents\\GitHub\\myFlix-client\\src\\components\\profile-update\\profile-update.jsx",
            lineNumber: 88
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Label, {
        __source: {
            fileName: "C:\\Users\\camel\\Documents\\GitHub\\myFlix-client\\src\\components\\profile-update\\profile-update.jsx",
            lineNumber: 89
        },
        __self: this
    }, "Username:"), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Control, {
        type: "text",
        value: username,
        placeholder: "Username",
        required: true,
        onChange: (e)=>setUsername(e.target.value)
        ,
        __source: {
            fileName: "C:\\Users\\camel\\Documents\\GitHub\\myFlix-client\\src\\components\\profile-update\\profile-update.jsx",
            lineNumber: 90
        },
        __self: this
    }), Object.keys(usernameError).map((key)=>{
        return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            key: key,
            __source: {
                fileName: "C:\\Users\\camel\\Documents\\GitHub\\myFlix-client\\src\\components\\profile-update\\profile-update.jsx",
                lineNumber: 99
            },
            __self: this
        }, usernameError[key]));
    })), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Group, {
        controlId: "formBasicPassword",
        __source: {
            fileName: "C:\\Users\\camel\\Documents\\GitHub\\myFlix-client\\src\\components\\profile-update\\profile-update.jsx",
            lineNumber: 105
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Label, {
        __source: {
            fileName: "C:\\Users\\camel\\Documents\\GitHub\\myFlix-client\\src\\components\\profile-update\\profile-update.jsx",
            lineNumber: 106
        },
        __self: this
    }, "Password:"), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Control, {
        type: "password",
        value: password,
        placeholder: "Password",
        required: true,
        onChange: (e)=>setPassword(e.target.value)
        ,
        __source: {
            fileName: "C:\\Users\\camel\\Documents\\GitHub\\myFlix-client\\src\\components\\profile-update\\profile-update.jsx",
            lineNumber: 107
        },
        __self: this
    }), Object.keys(passwordError).map((key)=>{
        return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            key: key,
            __source: {
                fileName: "C:\\Users\\camel\\Documents\\GitHub\\myFlix-client\\src\\components\\profile-update\\profile-update.jsx",
                lineNumber: 116
            },
            __self: this
        }, passwordError[key]));
    })), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Group, {
        __source: {
            fileName: "C:\\Users\\camel\\Documents\\GitHub\\myFlix-client\\src\\components\\profile-update\\profile-update.jsx",
            lineNumber: 122
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Label, {
        __source: {
            fileName: "C:\\Users\\camel\\Documents\\GitHub\\myFlix-client\\src\\components\\profile-update\\profile-update.jsx",
            lineNumber: 123
        },
        __self: this
    }, "Birthday:"), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Control, {
        type: "text",
        value: birthday,
        onChange: (e)=>setBirthday(e.target.value)
        ,
        __source: {
            fileName: "C:\\Users\\camel\\Documents\\GitHub\\myFlix-client\\src\\components\\profile-update\\profile-update.jsx",
            lineNumber: 124
        },
        __self: this
    })), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Group, {
        controlId: "formBasicEmail",
        __source: {
            fileName: "C:\\Users\\camel\\Documents\\GitHub\\myFlix-client\\src\\components\\profile-update\\profile-update.jsx",
            lineNumber: 130
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Label, {
        __source: {
            fileName: "C:\\Users\\camel\\Documents\\GitHub\\myFlix-client\\src\\components\\profile-update\\profile-update.jsx",
            lineNumber: 131
        },
        __self: this
    }, "Email:"), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Control, {
        type: "email",
        value: email,
        placeholder: "email@adress.com",
        required: true,
        onChange: (e)=>setEmail(e.target.value)
        ,
        __source: {
            fileName: "C:\\Users\\camel\\Documents\\GitHub\\myFlix-client\\src\\components\\profile-update\\profile-update.jsx",
            lineNumber: 132
        },
        __self: this
    }), Object.keys(emailError).map((key)=>{
        return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            key: key,
            __source: {
                fileName: "C:\\Users\\camel\\Documents\\GitHub\\myFlix-client\\src\\components\\profile-update\\profile-update.jsx",
                lineNumber: 141
            },
            __self: this
        }, emailError[key]));
    })), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Link, {
        to: `/users`,
        __source: {
            fileName: "C:\\Users\\camel\\Documents\\GitHub\\myFlix-client\\src\\components\\profile-update\\profile-update.jsx",
            lineNumber: 147
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_buttonDefault.default, {
        variant: "dark",
        type: "submit",
        onClick: handleUpdate,
        __source: {
            fileName: "C:\\Users\\camel\\Documents\\GitHub\\myFlix-client\\src\\components\\profile-update\\profile-update.jsx",
            lineNumber: 148
        },
        __self: this
    }, "Save")), /*#__PURE__*/ _reactDefault.default.createElement(_buttonDefault.default, {
        variant: "dark",
        onClick: onBackClick,
        __source: {
            fileName: "C:\\Users\\camel\\Documents\\GitHub\\myFlix-client\\src\\components\\profile-update\\profile-update.jsx",
            lineNumber: 156
        },
        __self: this
    }, "Back"))));
}
_s(ProfileUpdate, "jCPcO1VOFS64zxuNNZZTxAl1HvI=");
_c = ProfileUpdate;
var _c;
$RefreshReg$(_c, "ProfileUpdate");

  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}